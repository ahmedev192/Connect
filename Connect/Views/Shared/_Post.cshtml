@model Post

@{
	TimeSpan timeSpanSincePosted = DateTime.UtcNow.Subtract(Model.DateCreated);

	string displayTime = timeSpanSincePosted switch
	{
		var t when t.TotalDays >= 1 => $"{(int)t.TotalDays}d ago",
		var t when t.TotalHours >= 1 => $"{(int)t.TotalHours}h ago",
		var t when t.TotalMinutes >= 1 => $"{(int)t.TotalMinutes}m ago",
		_ => "Just now"
	};


	bool isFavorited = Model.Favorites.Any(n => n.UserId == 1);
	bool isLiked = Model.Likes.Any(n => n.UserId == 1);
	bool isReported = Model.Reports.Any(n => n.UserId == 1);


}

<div class="bg-white border1 rounded-xl text-sm font-medium shadow-sm">

	@* Post heading *@
	<div class="gap-3 p-2.5 flex text-sm font-medium sm:p-4">
		<a>
			<img src="@( string.IsNullOrEmpty(Model.User.ProfilePictureUrl) ? Url.Content("/images/avatars/user.png") : Model.User.ProfilePictureUrl )"
				 onerror="this.onerror=null; this.src='@Url.Content("/images/avatars/user.png")';"
				 class="w-9 h-9 rounded-full" />
		</a>
		<div class="flex-1">
			<a>
				<h4 class="text-black">@Model.User.FullName</h4>
				<div class="text-gray-500/80 text-xs" title="@Model.DateCreated.ToString("MM/dd/yyyy HH:mm")"> @displayTime </div>
			</a>
		</div>

		<div class="-mr-1">
			<button type="button" class="button-icon w-8 h-8"> <ion-icon class="text-xl" name="ellipsis-horizontal"></ion-icon> </button>
			<div class="post-options-dropdown w-[245px]" uk-dropdown="pos: bottom-right; animation: uk-animation-scale-up uk-transform-origin-top-right; animate-out: true; mode: click">
				@if (Model.UserId == 1)
				{
					<form asp-controller="post" asp-action="ToggleVisability">
						<input type="hidden" name="postId" value="@Model.Id" />
						<button type="submit" class="icon-link hover:!bg-red-50">
							<ion-icon name="@(Model.IsPrivate ? "lock-open-outline" : "lock-closed-outline")"></ion-icon>  Set as @(Model.IsPrivate ? "public" : "private")
						</button>
					</form>

					<hr>
                   <button type="button" onclick="openPostDeleteConfirmation('@Model.Id')" class="text-red-400 delete-post-btn hover:!bg-red-50">
                        <ion-icon name="trash-bin-outline"></ion-icon>  Delete Post
                    </button>
				}
				@if (!isReported)
				{
					<form asp-controller="Post" asp-action="AddPostReport">
						<input type="hidden" name="postId" value="@Model.Id"/>
						<button type="submit" class="icon-link hover:!bg-red-50">
							<ion-icon class="shrink-0 text-xl" name="flag-outline"></ion-icon>  Report
						</button>
					</form>
				}
			

			</div>
		</div>
	</div>

	@* Post content *@
	<a>
		<div class="p-2.5 pt-0 w-full sm:px-4">
			<p class="font-normal">
				@Model.Content
			</p>
		</div>
	</a>

	@if (!string.IsNullOrEmpty(Model.ImageUrl))
	{
		<a>
			@{
				var fallbackImage = Url.Content("/images/placeholders/post-placeholder.jpg");
			}
			<div class="relative h-full w-full sm:px-4 lg:h-96">
				<img src="@(string.IsNullOrEmpty(Model.ImageUrl) ? fallbackImage : Model.ImageUrl)"
					 onerror="this.onerror=null; this.src='@fallbackImage';"
					 @* class="w-9 h-9 rounded-full" *@ />
			</div>

		</a>
	}


	@* Icons *@
	<div class="p-2.5 gap-4 flex items-center text-xs font-semibold sm:p-4">

		<div class="gap-2.5 flex items-center">
			<form asp-controller="Post" asp-action="TogglePostLike">
				<input type="hidden" name="postId" value="@Model.Id" />
				<button type="submit" class="button-icon @(isLiked ? "text-red-500 bg-red-100" : "")">

					<ion-icon class="text-lg"
							  name="@(isLiked ? "heart" : "heart-outline")"></ion-icon>

				</button>
			</form>

			<a href="#">@Model.Likes.Count</a>
		</div>



		<div class="gap-3 flex items-center">
			<a class="button-icon">
				<ion-icon class="text-lg" name="chatbubble-ellipses-outline"></ion-icon>
			</a>
			<a href="#">@Model.Comments.Count</a>
		</div>

		<div class="ml-auto"></div>



		<div class="gap-2 flex items-center">
			<form asp-controller="Post" asp-action="TogglePostFavorite">
				<input type="hidden" name="postId" value="@Model.Id" />
				<button type="submit" class="button-icon ml-auto @(isFavorited ? "text-orange-500 bt-orange-100" : "")">
					<ion-icon class="text-lg" name="@(isFavorited ? "bookmark" : "bookmark-outline")"></ion-icon>
				</button>
			</form>
			@if (Model.Favorites.Count > 0)
			{
				<a href="#">@Model.Favorites.Count</a>
			}
		</div>











	</div>




















	@* Add comment section *@
	<div>

		<div class="p-2.5 border-gray-100 space-y-3 relative border-t font-normal">

			@foreach (var comment in Model.Comments.OrderByDescending(n => n.DateCreated).Take(3))
			{
				TimeSpan commentTimeSpanSincePosted = DateTime.UtcNow.Subtract(comment.DateCreated);

				string commentDisplayTime = commentTimeSpanSincePosted switch
				{
					var t when t.TotalDays >= 1 => $"{(int)t.TotalDays}d ago",
					var t when t.TotalHours >= 1 => $"{(int)t.TotalHours}h ago",
					var t when t.TotalMinutes >= 1 => $"{(int)t.TotalMinutes}m ago",
					_ => "Just now"
				};

				<div class="gap-3 relative flex items-start">
					<a>
						<img src="@(comment.User.ProfilePictureUrl ?? "/images/avatars/user.png")" class="w-6 h-6 mt-1 rounded-full" />
					</a>
					<div class="flex-1">
						<div class="justify-content-between flex">
							<a class="text-black inline-block flex-grow font-medium">
								@comment.User.FullName
							</a>
							<small>@commentDisplayTime</small>
						</div>
						<div class="flex items-center justify-between">
							<p class="mt-0.5">
								@comment.Content
							</p>

							<form asp-controller="Post" asp-action="RemovePostComment">
								<input type="hidden" name="commentId" value="@comment.Id" />
								<button type="submit" class="text-red-500 ml-2 text-xs" title="Remove post comment">
									<ion-icon name="trash-outline"></ion-icon>
								</button>
							</form>
						</div>

					</div>
				</div>
			}

			@if (Model.Comments.Count >= 3)
			{
				<div class="p-1.5">
					<a>
						Show all comments
					</a>
				</div>
			}

		</div>

		<form asp-controller="Post" asp-action="AddPostComment">

			<div class="p-2.5 border-gray-100 gap-1 flex items-center border-t sm:px-4 sm:py-3">
				<img src="/images/avatars/user.png" class="w-6 h-6 rounded-full" />

				<input type="hidden" name="postId" value="@Model.Id" />
				<div class="h-10 relative flex-1 overflow-hidden">
					<textarea name="content" placeholder="Add Comment...."
							  rows="1"
							  class="!bg-transparent px-4 py-2 w-full resize-none focus:!border-transparent focus:!ring-transparent"></textarea>
				</div>

				<button type="submit" class="py-1.5 px-3.5 bg-secondery rounded-full text-sm">Comment</button>
			</div>
		</form>
	</div>
</div>

