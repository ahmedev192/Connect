@model Post

@{
	TimeSpan timeSpanSincePosted = DateTime.UtcNow.Subtract(Model.DateCreated);

	string displayTime = timeSpanSincePosted switch
	{
		var t when t.TotalDays >= 1 => $"{(int)t.TotalDays}d ago",
		var t when t.TotalHours >= 1 => $"{(int)t.TotalHours}h ago",
		var t when t.TotalMinutes >= 1 => $"{(int)t.TotalMinutes}m ago",
		_ => "Just now"
	};
}

<div class="bg-white border1 rounded-xl text-sm font-medium shadow-sm">

	@* Post heading *@
	<div class="gap-3 p-2.5 flex text-sm font-medium sm:p-4">
		<a>
			<img src="@( string.IsNullOrEmpty(Model.User.ProfilePictureUrl) ? Url.Content("~/images/avatar/user.png") : Model.User.ProfilePictureUrl )"
				 onerror="this.onerror=null; this.src='@Url.Content("~/images/avatar/user.png")';"
				 class="w-9 h-9 rounded-full" />
		</a>
		<div class="flex-1">
			<a>
				<h4 class="text-black">@Model.User.FullName</h4>
				<div class="text-gray-500/80 text-xs" title="@Model.DateCreated.ToString("MM/dd/yyyy HH:mm")"> @displayTime </div>
			</a>
		</div>

		<div class="-mr-1">
			<button type="button" class="button-icon w-8 h-8"> <ion-icon class="text-xl" name="ellipsis-horizontal"></ion-icon> </button>
			<div class="w-[245px]" uk-dropdown="pos: bottom-right; animation: uk-animation-scale-up uk-transform-origin-top-right; animate-out: true; mode: click">
				<form>
					<input type="hidden" name="postId" />
					<button type="submit" class="icon-link hover:!bg-red-50">
						<ion-icon name="lock-closed-outline"></ion-icon>  Set as private
					</button>
				</form>

				<hr>
				<form asp-controller="Home" asp-action="Delete">
					<input type="hidden" name="postId" />
					<button type="submit" class="text-red-400 icon-link hover:!bg-red-50">
						<ion-icon name="trash-bin-outline"></ion-icon>  Delete Post
					</button>
				</form>
				<form asp-controller="Home" asp-action="Report">
					<input type="hidden" name="postId" />
					<button type="submit" class="icon-link hover:!bg-red-50">
						<ion-icon class="shrink-0 text-xl" name="flag-outline"></ion-icon>  Report
					</button>
				</form>
			</div>
		</div>
	</div>

	@* Post content *@
	<a>
		<div class="p-2.5 pt-0 w-full sm:px-4">
			<p class="font-normal">
				@Model.Content
			</p>
		</div>
	</a>

	@if (!string.IsNullOrEmpty(Model.ImageUrl))
	{
		<a>
			<div class="relative h-full w-full sm:px-4 lg:h-96">
				<img src="@Model.ImageUrl" class="h-full w-full object-cover sm:rounded-lg" />
			</div>
		</a>
	}


	@* Icons *@
	<div class="p-2.5 gap-4 flex items-center text-xs font-semibold sm:p-4">

		<div class="gap-2.5 flex items-center">
			<form asp-controller="Post" asp-action="TogglePostLike">
				<input type="hidden" name="postId" value="@Model.Id" />
				<button type="submit" class="button-icon @(Model.Likes.Any(n => n.UserId == 1) ? "text-red-500 bg-red-100" : "")">
					<ion-icon class="text-lg"
							  name="@(Model.Likes.Any(n => n.UserId == 1) ? "heart" : "heart-outline")"></ion-icon>
				</button>
			</form>

			<a href="#">@Model.Likes.Count</a>
		</div>



		<div class="gap-3 flex items-center">
			<a class="button-icon">
				<ion-icon class="text-lg" name="chatbubble-ellipses-outline"></ion-icon>
			</a>
			<a href="#">5</a>
		</div>

		<div class="ml-auto"></div>

		<div>
			<a class="button-icon ml-auto">
				<ion-icon class="text-lg" name="bookmark-outline"></ion-icon>
			</a>
		</div>
	</div>

	@* Add comment section *@
	<div>
		<div class="p-2.5 border-gray-100 gap-1 flex items-center border-t sm:px-4 sm:py-3">
			<img src="~/images/avatar/user.png" class="w-6 h-6 rounded-full" />

			<div class="h-10 relative flex-1 overflow-hidden">
				<textarea placeholder="Add Comment...." rows="1" class="!bg-transparent px-4 py-2 w-full resize-none focus:!border-transparent focus:!ring-transparent"></textarea>
			</div>

			<button class="py-1.5 px-3.5 bg-secondery rounded-full text-sm">Comment</button>

		</div>
	</div>
</div>