@model Post

<main id="site__main" class="p-2.5 h-[calc(100vh-var(--m-top))] mt-[--m-top] xl:ml-[--w-side-sm] 2xl:ml-[--w-side]">
	<div class="h-full w-full" id="js-oversized">
		<div class="h-full w-full">
			@*<div class="h-full w-full">*@
			<div id="posts-container" class="space-y-4">
				<partial name="_Post" model="Model" view-data='new ViewDataDictionary(ViewData) { { "ShowAllComment", true } }' />
			</div>
		</div>
	</div>
</main>


<partial name="_PostDeleteConfirmation" />

<script>
	function openPostDeleteConfirmation(postId) {

		console.log('Selected post id - ', postId);
		UIkit.dropdown('.post-options-dropdown').hide();
		document.getElementById('postId').value = postId;
		UIkit.modal('#postDeleteDialog').show();
	}







		document.addEventListener('DOMContentLoaded', function () {
		document.getElementById('posts-container').addEventListener('click', function () {
			// if (event.target.closest('.like-button')) {
			const button = event.target.closest('.like-button, .favorite-button')
			if (button) {
				event.preventDefault();

				// var button = event.target.closest('.like-button');
				var form = button.closest('form');
				var postId = form.querySelector('input[name="postId"]').value;
				var postContainer = document.getElementById('post-' + postId);

				fetch(form.action, {
					method: 'POST',
					body: new FormData(form),
					headers: {}
				})
					.then(response => response.text())
					.then(html => {
						const temp = document.createElement('div');
						temp.innerHTML = html.trim();
						const newPost = temp.firstElementChild;

						postContainer.replaceWith(newPost);
					})
					.catch(error => console.error('Error: ', error));
			}
		})
	})

</script>



